{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mac/Projects/ks-app/spa/src/Users.jsx\";\nimport { SendGetRequest } from '../src/api/user.js';\nimport React from 'react';\n\nclass Users extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(res => {\n      const persons = res.data;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.persons.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: person.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Projects/ks-app/spa/src/Users.jsx"],"names":["SendGetRequest","React","Users","Component","state","persons","componentDidMount","axios","get","then","res","data","setState","render","map","person","name"],"mappings":";;AAAA,SAAQA,cAAR,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,OAAO,EAAE;AADL,KAFuB;AAAA;;AAMjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAACC,GAAN,CAAW,4CAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,YAAML,OAAO,GAAGK,GAAG,CAACC,IAApB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACI,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAuBC,MAAM,iBAAI;AAAA,kBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAjC;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApBgC","sourcesContent":["import {SendGetRequest}  from  '../src/api/user.js';\nimport React from 'react';\n\nclass Users extends React.Component{\n\n    state = {\n        persons: []\n      }\n   \n  componentDidMount() {\n    axios.get(`https://jsonplaceholder.typicode.com/users`)\n      .then(res => {\n        const persons = res.data;\n        this.setState({ persons });\n      })\n  }\n\n  render() {\n    return (\n      <ul>\n        { this.state.persons.map(person => <li>{person.name}</li>)}\n      </ul>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}